{"version":3,"sources":["js/03-promises.js"],"names":["refs","inputDelay","document","querySelector","inputStep","inputAmount","form","onSubmit","event","preventDefault","onExecute","Number","value","firstDelay","delayStep","amount","i","delay","setTimeout","createPromise","then","position","alert","timeout","catch","shouldResolve","Math","random","Promise","resolve","reject","addEventListener"],"mappings":";AA+CA,MAAMA,EAAO,CACXC,WAAYC,SAASC,cAAc,kBACnCC,UAAWF,SAASC,cAAc,iBAClCE,YAAaH,SAASC,cAAc,mBACpCG,KAAMJ,SAASC,cAAc,UAK/B,SAASI,EAASC,GAChBA,EAAMC,iBAINC,EAHmBC,OAAOX,EAAKC,WAAWW,OACxBD,OAAOX,EAAKI,UAAUQ,OACzBD,OAAOX,EAAKK,YAAYO,QAIzC,SAASF,EAAUG,EAAYC,EAAWC,GACnC,IAAA,IAAIC,EAAI,EAAGC,EAAQJ,EAAYG,GAAKD,EAAQC,GAAK,EAAGC,GAASH,EAChEI,WACE,IACEC,EAAcH,EAAGC,GACdG,KAAK,EAAGC,SAAAA,EAAUJ,MAAAA,MAEfK,6BAA6BD,QAAeJ,MAAW,CACvDM,QAAS,SAGZC,MAAM,EAAGH,SAAAA,EAAUJ,MAAAA,MAEhBK,4BAA4BD,QAAeJ,MAAW,CACtDM,QAAS,SAGjBN,GAKN,SAASE,EAAcE,EAAUJ,GAG3BQ,OAFkBC,KAAKC,SAAW,GAG7BC,QAAQC,QAAQ,CAAER,SAAAA,EAAUJ,MAAAA,IAE5BW,QAAQE,OAAO,CAAET,SAAAA,EAAUJ,MAAAA,IAtCtCjB,EAAKM,KAAKyB,iBAAiB,SAAUxB","file":"03-promises.1c9e8749.js","sourceRoot":"../src","sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     \n//   } else {\n//     \n//   }\n// }\n\n// function logPromise(DELAY, STEP, AMOUNT) {\n//   return new Promise((resolve, reject) => {\n//   const shouldResolve = Math.random() > 0.5;\n//   setTimeout(()=> {\n//     if (shouldResolve) {\n//       resolve ('промис получился')\n//     }\n//     reject ('промис не получился(((') \n//   },DELAY)\n// })\n// }\n\n\n// function onFulfill(results) {\n//   console.log(`${results}`);\n// }\n// function onReject(reject) {\n//   console.log(`${reject}`);\n// }\n\n\n// const refs = {\n//   delay: document.querySelector('[name=delay]'),\n//   step: document.querySelector('[name=step]'),\n//   amount: document.querySelector('[name=amount]'),\n//   btnSubmit: document.querySelector('[type=submit]'),\n// }\n\n// refs.btnSubmit.addEventListener('click', onClickBtn);\n// function onClickBtn(e) {\n//   e.preventDefault();\n// // значення input\n//   const DELAY = Number(refs.delay.value);\n//   const STEP = Number(refs.step.value);\n//   const AMOUNT = Number(refs.amount.value);\n// }\n\n\nconst refs = {\n  inputDelay: document.querySelector('[name=\"delay\"]'),\n  inputStep: document.querySelector('[name=\"step\"]'),\n  inputAmount: document.querySelector('[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const firstDelay = Number(refs.inputDelay.value);\n  const delayStep = Number(refs.inputStep.value);\n  const amount = Number(refs.inputAmount.value);\n  onExecute(firstDelay, delayStep, amount);\n}\n\nfunction onExecute(firstDelay, delayStep, amount) {\n  for (let i = 1, delay = firstDelay; i <= amount; i += 1, delay += delayStep) {\n    setTimeout(\n      () =>\n        createPromise(i, delay)\n          .then(({ position, delay }) => {\n            // Notify.success\n              alert(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n              timeout: 2500,\n            });\n          })\n          .catch(({ position, delay }) => {\n            // Notify.failure\n              alert(`❌ Rejected promise ${position} in ${delay}ms`, {\n              timeout: 2500,\n            });\n          }),\n      delay,\n    );\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  if (shouldResolve) {\n    return Promise.resolve({ position, delay });\n  } else {\n    return Promise.reject({ position, delay });\n  }\n}"]}